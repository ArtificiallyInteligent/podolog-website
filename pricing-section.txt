"use client"

import type React from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Shield, Stethoscope, Zap, Sparkles } from "lucide-react"
import { useState } from "react"

interface Service {
  name: string
  price: string | number
  isIndividual?: boolean
}

interface ServiceCategory {
  title: string
  description: string
  badge: string
  icon: React.ReactNode
  iconColor: string
  services: Service[]
}

const categories: ServiceCategory[] = [
  {
    title: "Korekcja i ortopedia",
    description: "Wsparcie strukturalne stóp",
    badge: "KOREKCJA",
    icon: <Shield className="w-6 h-6" />,
    iconColor: "bg-purple-500",
    services: [
      { name: "Klin silikonowy", price: "INDYW.", isIndividual: true },
      { name: "Orteza", price: "INDYW.", isIndividual: true },
      { name: "Podcięcie paznoktu wrastającego + opatrunek", price: 150 },
      { name: "Przełożenie klamry", price: 150 },
      { name: "Separator palców", price: "INDYW.", isIndividual: true },
      { name: "Tamponada", price: "INDYW.", isIndividual: true },
      { name: "Założenie klamry korygującej", price: 200 },
    ],
  },
  {
    title: "Podstawowe zabiegi",
    description: "Konsultacje i podstawowa pielęgnacja",
    badge: "PODSTAWOWE",
    icon: <Stethoscope className="w-6 h-6" />,
    iconColor: "bg-blue-500",
    services: [
      { name: "Konsultacja podologiczna", price: 100 },
      { name: "Obcięcie paznokci - zdrowe", price: 100 },
      { name: "Obcięcie paznokci - zmienione chorobowo", price: 150 },
      { name: "Podstawowy zabieg podologiczny", price: 170 },
      { name: "Pękające pięty", price: 150 },
    ],
  },
  {
    title: "Usługi dodatkowe",
    description: "Uzupełniające terapie i wizyty",
    badge: "DODATKOWE",
    icon: <Zap className="w-6 h-6" />,
    iconColor: "bg-orange-500",
    services: [
      { name: "Leczenie onycholizy", price: 120 },
      { name: "Taping (kinesiotaping)", price: 40 },
      { name: "Wizyty domowe", price: "INDYW.", isIndividual: true },
    ],
  },
  {
    title: "Zabiegi specjalistyczne",
    description: "Zaawansowane zabiegi korekcyjne",
    badge: "SPECJALISTYCZNE",
    icon: <Sparkles className="w-6 h-6" />,
    iconColor: "bg-green-500",
    services: [
      { name: "Badanie mykologiczne", price: 150 },
      { name: "Leczenie brodawek", price: 120 },
      { name: "Opracowanie modzeli", price: 130 },
      { name: "Rekonstrukcja paznokci", price: 150 },
      { name: "Usunięcie odcisku", price: 100 },
    ],
  },
]

export function PricingSection() {
  const [hoveredCard, setHoveredCard] = useState<number | null>(null)

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      {categories.map((category, index) => (
        <Card
          key={index}
          onMouseEnter={() => setHoveredCard(index)}
          onMouseLeave={() => setHoveredCard(null)}
          className="flex flex-col hover:shadow-xl hover:-translate-y-1 transition-all duration-300 ease-out animate-in fade-in slide-in-from-bottom-4"
          style={{
            animationDelay: `${index * 100}ms`,
            animationFillMode: "backwards",
          }}
        >
          <CardHeader className="space-y-3">
            <div className="flex items-start justify-between">
              <div
                className={`${category.iconColor} text-white p-3 rounded-xl transition-transform duration-300 ${
                  hoveredCard === index ? "scale-110 rotate-3" : ""
                }`}
              >
                {category.icon}
              </div>
              <Badge
                variant="outline"
                className={`text-xs font-medium transition-all duration-300 ${
                  hoveredCard === index ? "scale-105" : ""
                }`}
              >
                {category.badge}
              </Badge>
            </div>
            <div>
              <CardTitle className="text-xl mb-1">{category.title}</CardTitle>
              <CardDescription className="text-sm">{category.description}</CardDescription>
            </div>
          </CardHeader>
          <CardContent className="flex-1">
            <ul className="space-y-3">
              {category.services.map((service, serviceIndex) => (
                <li
                  key={serviceIndex}
                  className="flex items-center justify-between p-3 rounded-lg bg-muted/30 hover:bg-muted/60 hover:scale-[1.02] transition-all duration-200 ease-out cursor-pointer group"
                >
                  <span className="text-sm font-medium text-foreground flex-1 pr-2 group-hover:translate-x-0.5 transition-transform duration-200">
                    {service.name}
                  </span>
                  <div className="bg-blue-500 text-white px-3 py-1.5 rounded-full text-sm font-semibold whitespace-nowrap group-hover:bg-blue-600 group-hover:scale-105 transition-all duration-200">
                    {service.isIndividual ? "CENA INDYW." : `${service.price} zł`}
                  </div>
                </li>
              ))}
            </ul>
          </CardContent>
        </Card>
      ))}
    </div>
  )
}
